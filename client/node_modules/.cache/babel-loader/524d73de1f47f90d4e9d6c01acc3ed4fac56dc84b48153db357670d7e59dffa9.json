{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Desktop\\\\spotify-test\\\\client\\\\src\\\\pages\\\\authorizedPage.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport React, { useContext } from 'react';\nimport MyContext from '../myContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthorizedPage() {\n  _s();\n  const queryString = window.location.search; // Gets the query string (?param1=value1&param2=value2)\n  const params = new URLSearchParams(queryString);\n  const code = params.get('code');\n  const state = params.get('state');\n\n  // console.log(\"React code\" + code)\n  // console.log(\"React state\" + state)\n  const {\n    accessToken,\n    setAccessToken\n  } = useContext(MyContext);\n  const body = {\n    code: code,\n    state: state\n  };\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  fetch('http://127.0.0.1:5000/auth/callback', requestOptions).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(data => {\n    console.log(data);\n    // setAccessToken(data.accessToken)\n  }).catch(error => {\n    console.error('Fetch error:', error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Access Token: \", accessToken, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthorizedPage, \"Qp0S/D51zW6qXCzB1PQcLT5lFZ0=\");\n_c = AuthorizedPage;\nexport default AuthorizedPage;\nvar _c;\n$RefreshReg$(_c, \"AuthorizedPage\");","map":{"version":3,"names":["React","useContext","MyContext","jsxDEV","_jsxDEV","AuthorizedPage","_s","queryString","window","location","search","params","URLSearchParams","code","get","state","accessToken","setAccessToken","body","requestOptions","method","headers","JSON","stringify","fetch","then","response","ok","Error","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ethan/OneDrive/Desktop/spotify-test/client/src/pages/authorizedPage.js"],"sourcesContent":["import '../App.css';\r\nimport React, { useContext } from 'react';\r\nimport MyContext from '../myContext';\r\n\r\nfunction AuthorizedPage() {\r\n  const queryString = window.location.search; // Gets the query string (?param1=value1&param2=value2)\r\n  const params = new URLSearchParams(queryString);\r\n  const code = params.get('code');\r\n  const state = params.get('state');\r\n\r\n  // console.log(\"React code\" + code)\r\n  // console.log(\"React state\" + state)\r\n  const { accessToken, setAccessToken} = useContext(MyContext);\r\n\r\n  const body = {\r\n    code: code,\r\n    state: state\r\n  }\r\n  const requestOptions={\r\n    method:\"POST\",\r\n    headers:{\r\n        'content-type':'application/json',\r\n    },\r\n    body:JSON.stringify(body)\r\n}\r\n\r\n  fetch('http://127.0.0.1:5000/auth/callback', requestOptions)\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return response.json();\r\n  })\r\n  .then(data => {\r\n    console.log(data)\r\n    // setAccessToken(data.accessToken)\r\n  })\r\n  .catch(error => {\r\n    console.error('Fetch error:', error);\r\n  });\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h1>Dashboard</h1>\r\n        <h2>Access Token: {accessToken} </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthorizedPage;"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC5C,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACL,WAAW,CAAC;EAC/C,MAAMM,IAAI,GAAGF,MAAM,CAACG,GAAG,CAAC,MAAM,CAAC;EAC/B,MAAMC,KAAK,GAAGJ,MAAM,CAACG,GAAG,CAAC,OAAO,CAAC;;EAEjC;EACA;EACA,MAAM;IAAEE,WAAW;IAAEC;EAAc,CAAC,GAAGhB,UAAU,CAACC,SAAS,CAAC;EAE5D,MAAMgB,IAAI,GAAG;IACXL,IAAI,EAAEA,IAAI;IACVE,KAAK,EAAEA;EACT,CAAC;EACD,MAAMI,cAAc,GAAC;IACnBC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDH,IAAI,EAACI,IAAI,CAACC,SAAS,CAACL,IAAI;EAC5B,CAAC;EAECM,KAAK,CAAC,qCAAqC,EAAEL,cAAc,CAAC,CAC3DM,IAAI,CAACC,QAAQ,IAAI;IAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;IACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB;EACF,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;IACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;EACtC,CAAC,CAAC;EAGF,oBACE9B,OAAA;IAAA+B,QAAA,gBACI/B,OAAA;MAAA+B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnC,OAAA;MAAA+B,QAAA,GAAI,gBAAc,EAACnB,WAAW,EAAC,GAAC;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV;AAACjC,EAAA,CA5CQD,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AA8CvB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}