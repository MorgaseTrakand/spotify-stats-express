{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Desktop\\\\spotify-stats-express\\\\client\\\\src\\\\components\\\\Layout.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n/* This function will serve as a higher-order component (HOC) that will wrap around every page on this application. \r\n\r\nIt will serve to handle all verification and token refreshs, \r\nin addition to rerouting to the landing page to log in if an access token is not available or if the refresh fails.\r\nLogic as follows, check if access token exists => if so validate token => if token validates allow page to continue as normal\r\nif token does not validate => refresh token => if refresh fails reroute to landing page\r\nif token does not exist => logout => reroute to landing page\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Layout = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  async function handleFailedRefresh() {\n    fetch('http://localhost:5000/login').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      window.location.href = data.authUrl;\n    }).catch(error => {\n      console.error('Fetch error:', error);\n    });\n  }\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"refresh_token\");\n    navigate('/');\n  }, [navigate]);\n  const refreshToken = useCallback(async refresh_token => {\n    console.log(\"refresh token:\" + refresh_token);\n    try {\n      const response = await fetch(`http://localhost:5000/refresh_token?refresh_token=${refresh_token}`);\n      if (!response.ok) {\n        logout();\n        throw new Error(`Failed to refresh token: ${response.statusText}`);\n      }\n      const responseData = await response.json();\n      console.log(\"response data\" + responseData.access_token);\n      if (responseData.access_token == undefined) {\n        console.log(\"refresh failed\");\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n        handleFailedRefresh();\n      } else {\n        localStorage.setItem('access_token', responseData.access_token);\n        console.log(\"successfully refreshed token\");\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(\"did not refresh\");\n      logout();\n    }\n  }, [logout]);\n  const validate = useCallback(async access_token => {\n    try {\n      console.log(\"entering validate function\");\n      console.log(\"validate checking \" + access_token);\n      const response = await fetch(`http://localhost:5000/token_valid?access_token=${access_token}`);\n      const data = await response.json();\n      const trueOrFalse = data.valid;\n      if (trueOrFalse) {\n        console.log(\"token validated\");\n        return true;\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.error('Error checking validity:', error);\n      return false;\n    }\n  }, [refreshToken, navigate]);\n  const {\n    trackData\n  } = useDataContext();\n  useEffect(() => {\n    const handleValidation = async () => {\n      const AT = localStorage.getItem(\"access_token\");\n      const RT = localStorage.getItem(\"refresh_token\");\n      if (AT) {\n        console.log(\"has access_token: \" + AT);\n        if (await validate(AT)) {} else {\n          await refreshToken(RT);\n        }\n      } else {\n        logout();\n      }\n    };\n    if (trackData[0]) {\n      return;\n    } else {\n      handleValidation();\n    }\n  }, [logout, refreshToken, validate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Layout, \"Y4j7d2txYDGb8igmDF398SbsmS4=\", true, function () {\n  return [useNavigate];\n});\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["useEffect","useCallback","useNavigate","jsxDEV","_jsxDEV","Layout","children","_s","navigate","handleFailedRefresh","fetch","then","response","ok","Error","json","data","window","location","href","authUrl","catch","error","console","logout","localStorage","removeItem","refreshToken","refresh_token","log","statusText","responseData","access_token","undefined","setItem","validate","trueOrFalse","valid","trackData","useDataContext","handleValidation","AT","getItem","RT","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ethan/OneDrive/Desktop/spotify-stats-express/client/src/components/Layout.js"],"sourcesContent":["import { useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n/* This function will serve as a higher-order component (HOC) that will wrap around every page on this application. \r\n\r\nIt will serve to handle all verification and token refreshs, \r\nin addition to rerouting to the landing page to log in if an access token is not available or if the refresh fails.\r\nLogic as follows, check if access token exists => if so validate token => if token validates allow page to continue as normal\r\nif token does not validate => refresh token => if refresh fails reroute to landing page\r\nif token does not exist => logout => reroute to landing page\r\n*/ \r\nconst Layout = ({ children }) => {\r\n  const navigate = useNavigate();\r\n\r\n  async function handleFailedRefresh() {\r\n    fetch('http://localhost:5000/login')\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      window.location.href = data.authUrl;\r\n    })\r\n    .catch(error => {\r\n      console.error('Fetch error:', error);\r\n    });\r\n  }\r\n\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"refresh_token\");\r\n    navigate('/');\r\n  }, [navigate]);\r\n\r\n\r\n  const refreshToken = useCallback(async (refresh_token) => {\r\n    console.log(\"refresh token:\" + refresh_token)\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/refresh_token?refresh_token=${refresh_token}`);\r\n      if (!response.ok) {\r\n        logout()\r\n        throw new Error(`Failed to refresh token: ${response.statusText}`);\r\n      }\r\n  \r\n      const responseData = await response.json();\r\n\r\n      console.log(\"response data\" +responseData.access_token)\r\n      if (responseData.access_token == undefined) {\r\n        console.log(\"refresh failed\")\r\n        localStorage.removeItem(\"access_token\");\r\n        localStorage.removeItem(\"refresh_token\");\r\n        handleFailedRefresh();\r\n      }\r\n      else {\r\n        localStorage.setItem('access_token', responseData.access_token);\r\n        console.log(\"successfully refreshed token\")\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      console.log(\"did not refresh\")\r\n      logout();\r\n    }  }, [logout]);\r\n\r\n\r\n  const validate = useCallback(async (access_token) => {\r\n    try {\r\n      console.log(\"entering validate function\")\r\n      console.log(\"validate checking \"+access_token)\r\n\r\n      const response = await fetch(`http://localhost:5000/token_valid?access_token=${access_token}`);\r\n      const data = await response.json();\r\n      const trueOrFalse = data.valid;\r\n\r\n      if (trueOrFalse) {\r\n        console.log(\"token validated\")\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking validity:', error);\r\n      return false;\r\n    }  \r\n  }, [refreshToken, navigate]);\r\n  const { trackData } = useDataContext();\r\n\r\n\r\n  useEffect(() => {\r\n    const handleValidation = async () => {\r\n      const AT = localStorage.getItem(\"access_token\");\r\n      const RT = localStorage.getItem(\"refresh_token\");\r\n      if (AT) {\r\n        console.log(\"has access_token: \"+AT)\r\n        if (await validate(AT)) {\r\n        } else {\r\n          await refreshToken(RT);\r\n        }\r\n      } else {\r\n        logout();\r\n      }\r\n    };\r\n    \r\n    if (trackData[0]) {\r\n      return;\r\n    }\r\n    else {\r\n      handleValidation();\r\n    }\r\n  }, [logout, refreshToken, validate]);\r\n\r\n  return (\r\n    <div>\r\n      { children }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}