{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Desktop\\\\spotify-stats-express\\\\client\\\\src\\\\components\\\\Dropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = ({\n  options\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleDropdownClick = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionClick = option => {\n    console.log(`Selected option: ${option}`);\n    // You can perform further actions with the selected option here\n    setIsOpen(false); // Close the dropdown after selecting an option\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dropdown-btn\",\n      onClick: handleDropdownClick,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-content\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-option\",\n          onClick: () => handleOptionClick(option),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-option\",\n          onClick: () => handleOptionClick(option),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dropdown","options","_s","isOpen","setIsOpen","handleDropdownClick","handleOptionClick","option","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/ethan/OneDrive/Desktop/spotify-stats-express/client/src/components/Dropdown.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Dropdown = ({ options }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  \r\n  const handleDropdownClick = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  \r\n  const handleOptionClick = (option) => {\r\n    console.log(`Selected option: ${option}`);\r\n    // You can perform further actions with the selected option here\r\n    setIsOpen(false); // Close the dropdown after selecting an option\r\n  };\r\n  \r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"dropdown-btn\" onClick={handleDropdownClick}>\r\n        Click\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"dropdown-content\">\r\n          {options.map(option => (\r\n            <div>\r\n              <div key={option} className=\"dropdown-option\" onClick={() => handleOptionClick(option)}>\r\n                {option}\r\n              </div>\r\n              <div key={option} className=\"dropdown-option\" onClick={() => handleOptionClick(option)}>\r\n                {option}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;IAChCD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMG,iBAAiB,GAAIC,MAAM,IAAK;IACpCC,OAAO,CAACC,GAAG,CAAE,oBAAmBF,MAAO,EAAC,CAAC;IACzC;IACAH,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,oBACEL,OAAA;IAAKW,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBZ,OAAA;MAAQW,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEP,mBAAoB;MAAAM,QAAA,EAAC;IAE/D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRb,MAAM,iBACLJ,OAAA;MAAKW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BV,OAAO,CAACgB,GAAG,CAACV,MAAM,iBACjBR,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAkBW,SAAS,EAAC,iBAAiB;UAACE,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAACC,MAAM,CAAE;UAAAI,QAAA,EACpFJ;QAAM,GADCA,MAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CAAC,eACNjB,OAAA;UAAkBW,SAAS,EAAC,iBAAiB;UAACE,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAACC,MAAM,CAAE;UAAAI,QAAA,EACpFJ;QAAM,GADCA,MAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAlCIF,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}