{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nexport async function pagePreCheck() {\n  _s();\n  const [isValid, setIsValid] = useState(false);\n  if (localStorage.getItem(\"access_token\")) {\n    try {\n      const access_token = localStorage.getItem(\"access_token\");\n      const response = await fetch(`http://localhost:5000/token_valid?access_token=${access_token}`);\n      const data = await response.json();\n      setIsValid(data.isValid);\n      if (data.isValid) {\n        console.log(true);\n        return true;\n      } else {\n        refreshToken();\n        console.log(false);\n        return false;\n      }\n    } catch (error) {\n      console.error('Error checking validity:', error);\n      return false;\n    }\n  } else {\n    logout(navigate);\n    return false;\n  }\n}\n_s(pagePreCheck, \"f8ezDtY664BjKG4YZGDPR5o1gaY=\");\nexport function logout(navigate) {\n  localStorage.removeItem(\"access_token\");\n  localStorage.removeItem(\"refresh_token\");\n  navigate('/');\n}\nexport async function refreshToken() {\n  const refresh_token = localStorage.getItem(\"refresh_token\");\n  const url = \"https://accounts.spotify.com/api/token\";\n  const payload = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: new URLSearchParams({\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n      client_id: clientId\n    })\n  };\n  const respone = await fetch(url, payload);\n  localStorage.setItem('access_token', response.accessToken);\n  localStorage.setItem('refresh_token', response.refreshToken);\n}","map":{"version":3,"names":["React","useEffect","useState","pagePreCheck","_s","isValid","setIsValid","localStorage","getItem","access_token","response","fetch","data","json","console","log","refreshToken","error","logout","navigate","removeItem","refresh_token","url","payload","method","headers","body","URLSearchParams","grant_type","client_id","clientId","respone","setItem","accessToken"],"sources":["C:/Users/Ethan Snyder/Desktop/Spotify-Stats-Express/client/src/pages/utils.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport async function pagePreCheck() {\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  if (localStorage.getItem(\"access_token\")) {\r\n    try {\r\n      const access_token = localStorage.getItem(\"access_token\");\r\n      const response = await fetch(`http://localhost:5000/token_valid?access_token=${access_token}`);\r\n      const data = await response.json();\r\n      setIsValid(data.isValid);\r\n\r\n      if (data.isValid) {\r\n        console.log(true);\r\n        return true;\r\n      } else {\r\n        refreshToken();\r\n        console.log(false);\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking validity:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    logout(navigate);\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\nexport function logout(navigate) {\r\n  localStorage.removeItem(\"access_token\");\r\n  localStorage.removeItem(\"refresh_token\");\r\n  navigate('/')\r\n}\r\n\r\n\r\nexport async function refreshToken() {\r\n  const refresh_token = localStorage.getItem(\"refresh_token\");\r\n  const url = \"https://accounts.spotify.com/api/token\";\r\n\r\n  const payload = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({\r\n      grant_type: 'refresh_token',\r\n      refresh_token: refreshToken,\r\n      client_id: clientId\r\n    }),\r\n  }\r\n  const respone = await fetch(url, payload);\r\n\r\n  localStorage.setItem('access_token', response.accessToken);\r\n  localStorage.setItem('refresh_token', response.refreshToken);\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAO,eAAeC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAE7C,IAAIK,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EAAE;IACxC,IAAI;MACF,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,kDAAiDF,YAAa,EAAC,CAAC;MAC9F,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,UAAU,CAACM,IAAI,CAACP,OAAO,CAAC;MAExB,IAAIO,IAAI,CAACP,OAAO,EAAE;QAChBS,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;QACjB,OAAO,IAAI;MACb,CAAC,MAAM;QACLC,YAAY,CAAC,CAAC;QACdF,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;QAClB,OAAO,KAAK;MACd;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO,KAAK;IACd;EACF,CAAC,MAAM;IACLC,MAAM,CAACC,QAAQ,CAAC;IAChB,OAAO,KAAK;EACd;AACF;AAACf,EAAA,CA1BqBD,YAAY;AA6BlC,OAAO,SAASe,MAAMA,CAACC,QAAQ,EAAE;EAC/BZ,YAAY,CAACa,UAAU,CAAC,cAAc,CAAC;EACvCb,YAAY,CAACa,UAAU,CAAC,eAAe,CAAC;EACxCD,QAAQ,CAAC,GAAG,CAAC;AACf;AAGA,OAAO,eAAeH,YAAYA,CAAA,EAAG;EACnC,MAAMK,aAAa,GAAGd,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EAC3D,MAAMc,GAAG,GAAG,wCAAwC;EAEpD,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;MACxBC,UAAU,EAAE,eAAe;MAC3BP,aAAa,EAAEL,YAAY;MAC3Ba,SAAS,EAAEC;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAO,GAAG,MAAMpB,KAAK,CAACW,GAAG,EAAEC,OAAO,CAAC;EAEzChB,YAAY,CAACyB,OAAO,CAAC,cAAc,EAAEtB,QAAQ,CAACuB,WAAW,CAAC;EAC1D1B,YAAY,CAACyB,OAAO,CAAC,eAAe,EAAEtB,QAAQ,CAACM,YAAY,CAAC;AAC9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}