{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nexport async function usePagePreCheck() {\n  _s();\n  const navigate = useNavigate();\n  if (localStorage.getItem(\"access_token\")) {\n    try {\n      const access_token = localStorage.getItem(\"access_token\");\n      const response = await fetch(`http://localhost:5000/token_valid?access_token=${access_token}`);\n      const data = await response.json();\n      const IsValid = data.isValid;\n      if (IsValid) {\n        console.log(true);\n        return true;\n      } else {\n        await refreshToken();\n        return false;\n      }\n    } catch (error) {\n      console.error('Error checking validity:', error);\n      return false;\n    }\n  } else {\n    logout(navigate);\n  }\n}\n_s(usePagePreCheck, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\nexport async function refreshToken() {\n  _s2();\n  const navigate = useNavigate();\n  const refresh_token = localStorage.getItem(\"refresh_token\");\n  const url = \"https://accounts.spotify.com/api/token\";\n  const payload = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: new URLSearchParams({\n      grant_type: 'refresh_token',\n      refresh_token: refresh_token\n      //client_id: clientId\n    })\n  };\n  try {\n    const response = await fetch(url, payload);\n    if (!response.ok) {\n      logout(navigate);\n      throw new Error('Failed to refresh token');\n    }\n    const responseData = await response.json();\n    localStorage.setItem('access_token', responseData.access_token);\n    localStorage.setItem('refresh_token', responseData.refresh_token);\n  } catch (error) {\n    throw new Error('Error refreshing token: ' + error.message);\n  }\n}\n_s2(refreshToken, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\nexport function logout(navigate) {\n  localStorage.removeItem(\"access_token\");\n  localStorage.removeItem(\"refresh_token\");\n  navigate('/');\n}","map":{"version":3,"names":["useNavigate","usePagePreCheck","_s","navigate","localStorage","getItem","access_token","response","fetch","data","json","IsValid","isValid","console","log","refreshToken","error","logout","_s2","refresh_token","url","payload","method","headers","body","URLSearchParams","grant_type","ok","Error","responseData","setItem","message","removeItem"],"sources":["C:/Users/Ethan Snyder/Desktop/Spotify-Stats-Express/client/src/pages/utils.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\n\r\nexport async function usePagePreCheck() {\r\n  const navigate = useNavigate();\r\n\r\n  if (localStorage.getItem(\"access_token\")) {\r\n    try {\r\n      const access_token = localStorage.getItem(\"access_token\");\r\n      const response = await fetch(`http://localhost:5000/token_valid?access_token=${access_token}`);\r\n      const data = await response.json();\r\n      const IsValid = data.isValid;\r\n\r\n      if (IsValid) {\r\n        console.log(true);\r\n        return true;\r\n      } else {\r\n        await refreshToken();\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking validity:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    logout(navigate)\r\n  }\r\n}\r\n\r\nexport async function refreshToken() {\r\n  const navigate = useNavigate();\r\n\r\n  const refresh_token = localStorage.getItem(\"refresh_token\");\r\n  const url = \"https://accounts.spotify.com/api/token\";\r\n\r\n  const payload = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({\r\n      grant_type: 'refresh_token',\r\n      refresh_token: refresh_token,\r\n      //client_id: clientId\r\n    }),\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, payload);\r\n    if (!response.ok) {\r\n      logout(navigate)\r\n      throw new Error('Failed to refresh token');\r\n    }\r\n\r\n    const responseData = await response.json();\r\n\r\n    localStorage.setItem('access_token', responseData.access_token);\r\n    localStorage.setItem('refresh_token', responseData.refresh_token);\r\n  } catch (error) {\r\n    throw new Error('Error refreshing token: ' + error.message);\r\n  }\r\n}\r\n\r\nexport function logout(navigate) {\r\n  localStorage.removeItem(\"access_token\");\r\n  localStorage.removeItem(\"refresh_token\");\r\n  navigate('/')\r\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,eAAeC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAE9B,IAAII,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EAAE;IACxC,IAAI;MACF,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,kDAAiDF,YAAa,EAAC,CAAC;MAC9F,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMC,OAAO,GAAGF,IAAI,CAACG,OAAO;MAE5B,IAAID,OAAO,EAAE;QACXE,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;QACjB,OAAO,IAAI;MACb,CAAC,MAAM;QACL,MAAMC,YAAY,CAAC,CAAC;QACpB,OAAO,KAAK;MACd;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO,KAAK;IACd;EACF,CAAC,MAAM;IACLC,MAAM,CAACd,QAAQ,CAAC;EAClB;AACF;AAACD,EAAA,CAxBqBD,eAAe;EAAA,QAClBD,WAAW;AAAA;AAyB9B,OAAO,eAAee,YAAYA,CAAA,EAAG;EAAAG,GAAA;EACnC,MAAMf,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAE9B,MAAMmB,aAAa,GAAGf,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EAC3D,MAAMe,GAAG,GAAG,wCAAwC;EAEpD,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;MACxBC,UAAU,EAAE,eAAe;MAC3BP,aAAa,EAAEA;MACf;IACF,CAAC;EACH,CAAC;EAED,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACY,GAAG,EAAEC,OAAO,CAAC;IAC1C,IAAI,CAACd,QAAQ,CAACoB,EAAE,EAAE;MAChBV,MAAM,CAACd,QAAQ,CAAC;MAChB,MAAM,IAAIyB,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEA,MAAMC,YAAY,GAAG,MAAMtB,QAAQ,CAACG,IAAI,CAAC,CAAC;IAE1CN,YAAY,CAAC0B,OAAO,CAAC,cAAc,EAAED,YAAY,CAACvB,YAAY,CAAC;IAC/DF,YAAY,CAAC0B,OAAO,CAAC,eAAe,EAAED,YAAY,CAACV,aAAa,CAAC;EACnE,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd,MAAM,IAAIY,KAAK,CAAC,0BAA0B,GAAGZ,KAAK,CAACe,OAAO,CAAC;EAC7D;AACF;AAACb,GAAA,CAhCqBH,YAAY;EAAA,QACff,WAAW;AAAA;AAiC9B,OAAO,SAASiB,MAAMA,CAACd,QAAQ,EAAE;EAC/BC,YAAY,CAAC4B,UAAU,CAAC,cAAc,CAAC;EACvC5B,YAAY,CAAC4B,UAAU,CAAC,eAAe,CAAC;EACxC7B,QAAQ,CAAC,GAAG,CAAC;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}