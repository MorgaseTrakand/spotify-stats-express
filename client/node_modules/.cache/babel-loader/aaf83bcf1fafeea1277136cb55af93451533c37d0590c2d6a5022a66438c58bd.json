{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Desktop\\\\spotify-test\\\\client\\\\src\\\\pages\\\\authorizedPage.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport React, { useEffect, useContext } from 'react';\nimport MyContext from '../myContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthorizedPage() {\n  _s();\n  const {\n    accessToken,\n    setAccessToken\n  } = useContext(MyContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const queryString = window.location.search;\n        const params = new URLSearchParams(queryString);\n        const code = params.get('code');\n        const state = params.get('state');\n        const requestOptions = {\n          method: \"GET\",\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        const response = await fetch(`http://127.0.0.1:5000/auth/callback?code=${code}&state=${state}`, requestOptions);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setAccessToken(data.accessToken);\n      } catch (error) {\n        console.error('Fetch error:', error);\n      }\n    };\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Access Token: \", accessToken, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthorizedPage, \"dRGzPXzTcVzzEqgbOhqA329Ntco=\");\n_c = AuthorizedPage;\nexport default AuthorizedPage;\nvar _c;\n$RefreshReg$(_c, \"AuthorizedPage\");","map":{"version":3,"names":["React","useEffect","useContext","MyContext","jsxDEV","_jsxDEV","AuthorizedPage","_s","accessToken","setAccessToken","fetchData","queryString","window","location","search","params","URLSearchParams","code","get","state","requestOptions","method","headers","response","fetch","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ethan/OneDrive/Desktop/spotify-test/client/src/pages/authorizedPage.js"],"sourcesContent":["import '../App.css';\r\nimport React, { useEffect, useContext } from 'react';\r\nimport MyContext from '../myContext';\r\n\r\nfunction AuthorizedPage() {\r\n  const { accessToken, setAccessToken } = useContext(MyContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const queryString = window.location.search;\r\n        const params = new URLSearchParams(queryString);\r\n        const code = params.get('code');\r\n        const state = params.get('state');\r\n\r\n        const requestOptions = {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        };\r\n\r\n        const response = await fetch(`http://127.0.0.1:5000/auth/callback?code=${code}&state=${state}`, requestOptions);\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setAccessToken(data.accessToken);\r\n      } catch (error) {\r\n        console.error('Fetch error:', error);\r\n      }\r\n    };\r\n\r\n    fetchData(); // Call the fetchData function when the component mounts\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <h2>Access Token: {accessToken} </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthorizedPage;\r\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACpD,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGP,UAAU,CAACC,SAAS,CAAC;EAE7DF,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;QAC1C,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACL,WAAW,CAAC;QAC/C,MAAMM,IAAI,GAAGF,MAAM,CAACG,GAAG,CAAC,MAAM,CAAC;QAC/B,MAAMC,KAAK,GAAGJ,MAAM,CAACG,GAAG,CAAC,OAAO,CAAC;QAEjC,MAAME,cAAc,GAAG;UACrBC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC;QAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CP,IAAK,UAASE,KAAM,EAAC,EAAEC,cAAc,CAAC;QAE/G,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCnB,cAAc,CAACkB,IAAI,CAACnB,WAAW,CAAC;MAClC,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF,CAAC;IAEDnB,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB9B,OAAA;MAAA0B,QAAA,GAAI,gBAAc,EAACvB,WAAW,EAAC,GAAC;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAAC5B,EAAA,CAxCQD,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}